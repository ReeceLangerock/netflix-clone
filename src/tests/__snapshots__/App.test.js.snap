// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <ConnectedRouter
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <styled.div>
          <styled.div>
            <main>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/who"
                />
              </Switch>
            </main>
          </styled.div>
        </styled.div>
      </ConnectedRouter>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div>
            <main>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/who"
                />
              </Switch>
            </main>
          </styled.div>
        </styled.div>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <main>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/who"
                />
              </Switch>
            </main>
          </styled.div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <main>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/who"
                />
              </Switch>
            </main>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/who"
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/who"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/who",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "main",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <ConnectedRouter
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <styled.div>
            <styled.div>
              <main>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/who"
                  />
                </Switch>
              </main>
            </styled.div>
          </styled.div>
        </ConnectedRouter>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div>
              <main>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/who"
                  />
                </Switch>
              </main>
            </styled.div>
          </styled.div>,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <main>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/who"
                  />
                </Switch>
              </main>
            </styled.div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <main>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/who"
                  />
                </Switch>
              </main>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/who"
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/who"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/who",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "main",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
